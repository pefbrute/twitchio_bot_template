import logging
import random
import os
import sys
from commands import BotCommand
from utils.cooldown_manager import cooldown
from utils.permission_manager import mod_only

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
if current_dir not in sys.path:
    sys.path.append(current_dir)

logger = logging.getLogger('twitch_bot')

class CasinoCommand(BotCommand):
    def __init__(self, bot):
        super().__init__(bot)
        self.bot = bot
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–∞–ª–∞–Ω—Å–∞ –∏–∑ –º–æ–¥—É–ª—è balance
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º singleton —ç–∫–∑–µ–º–ø–ª—è—Ä balance_manager –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
            from commands.balance.balance_manager import balance_manager
            self.balance_manager = balance_manager
            logger.info("Casino module initialized with balance manager")
        except ImportError as e:
            logger.error(f"Failed to import balance_manager: {str(e)}")
            self.balance_manager = None
    
    def register_commands(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –∫–∞–∑–∏–Ω–æ"""
        
        @self.bot.command(name="–∫–∞–∑–∏–∫")
        @cooldown(user_cd=30, global_cd=5)  # –ö—É–ª–¥–∞—É–Ω 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, 5 —Å–µ–∫—É–Ω–¥ –≥–ª–æ–±–∞–ª—å–Ω–æ
        async def casino_command(ctx):
            """–ö–æ–º–∞–Ω–¥–∞ !–∫–∞–∑–∏–∫ [–ø—Ä–æ—Ü–µ–Ω—Ç]"""
            try:
                if not self.balance_manager:
                    await ctx.send(f"@{ctx.author.name}, —Å–∏—Å—Ç–µ–º–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    return
                
                # –†–∞–∑–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_parts = ctx.message.content.split()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç
                if len(message_parts) < 2:
                    await ctx.send(f"@{ctx.author.name}, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è —Å—Ç–∞–≤–∫–∏ (1-100). –ü—Ä–∏–º–µ—Ä: !–∫–∞–∑–∏–Ω–æ 50")
                    return
                
                # –ü–æ–ª—É—á–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç
                try:
                    percentage = int(message_parts[1])
                    if percentage < 1 or percentage > 100:
                        await ctx.send(f"@{ctx.author.name}, –ø—Ä–æ—Ü–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 100.")
                        return
                except ValueError:
                    await ctx.send(f"@{ctx.author.name}, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 1 –¥–æ 100.")
                    return
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                username = ctx.author.name.lower()
                current_balance = self.balance_manager.get_balance(username)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–Ω—å–≥–∏
                if current_balance <= 0:
                    await ctx.send(f"@{ctx.author.name}, —É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è –∏–≥—Ä—ã –≤ –∫–∞–∑–∏–Ω–æ.")
                    return
                
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
                bet_amount = int(current_balance * percentage / 100)
                if bet_amount < 1:
                    bet_amount = 1  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 1 —Ä—É–±–ª—å
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (10% —à–∞–Ω—Å –Ω–∞ –ø–æ–±–µ–¥—É)
                win = random.random() < 0.1
                
                if win:
                    # –í—ã–∏–≥—Ä—ã—à - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–≤–∫—É –∫ –±–∞–ª–∞–Ω—Å—É
                    new_balance = self.balance_manager.adjust_balance(username, bet_amount)
                    formatted_bet = self.balance_manager.format_balance(bet_amount)
                    formatted_balance = self.balance_manager.format_balance(new_balance)
                    
                    await ctx.send(f"üé∞ @{ctx.author.name} –í–´–ò–ì–†–ê–õ –≤ –∫–∞–∑–∏–Ω–æ! –°—Ç–∞–≤–∫–∞: {formatted_bet} —Ä—É–±. ({percentage}%). "
                                  f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {formatted_balance} —Ä—É–±. (+{formatted_bet} —Ä—É–±.)")
                    logger.info(f"User {username} won {bet_amount} rubles in casino. New balance: {new_balance}")
                else:
                    # –ü—Ä–æ–∏–≥—Ä—ã—à - –≤—ã—á–∏—Ç–∞–µ–º —Å—Ç–∞–≤–∫—É –∏–∑ –±–∞–ª–∞–Ω—Å–∞
                    new_balance = self.balance_manager.adjust_balance(username, -bet_amount)
                    formatted_bet = self.balance_manager.format_balance(bet_amount)
                    formatted_balance = self.balance_manager.format_balance(new_balance)
                    
                    await ctx.send(f"üé∞ @{ctx.author.name} –ø—Ä–æ–∏–≥—Ä–∞–ª –≤ –∫–∞–∑–∏–Ω–æ. –°—Ç–∞–≤–∫–∞: {formatted_bet} —Ä—É–±. ({percentage}%). "
                                  f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {formatted_balance} —Ä—É–±. (-{formatted_bet} —Ä—É–±.)")
                    logger.info(f"User {username} lost {bet_amount} rubles in casino. New balance: {new_balance}")
                
            except Exception as e:
                logger.error(f"Error in casino command: {str(e)}")
                await ctx.send(f"@{ctx.author.name}, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∑–∏–Ω–æ.")
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —à–∞–Ω—Å–∞ –≤—ã–∏–≥—Ä—ã—à–∞ (–≤—Ä–µ–º–µ–Ω–Ω–æ)
        @self.bot.command(name="–∫–∞–∑–∏–∫-—à–∞–Ω—Å")
        @mod_only()
        async def casino_chance_command(ctx):
            """–ö–æ–º–∞–Ω–¥–∞ !–∫–∞–∑–∏–∫-—à–∞–Ω—Å [–ø—Ä–æ—Ü–µ–Ω—Ç] - —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"""
            try:
                message_parts = ctx.message.content.split()
                
                if len(message_parts) < 2:
                    await ctx.send(f"@{ctx.author.name}, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —à–∞–Ω—Å–∞ –≤—ã–∏–≥—Ä—ã—à–∞ (1-100). –ü—Ä–∏–º–µ—Ä: !–∫–∞–∑–∏–Ω–æ-—à–∞–Ω—Å 10")
                    return
                
                try:
                    chance = int(message_parts[1])
                    if chance < 1 or chance > 100:
                        await ctx.send(f"@{ctx.author.name}, –ø—Ä–æ—Ü–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 100.")
                        return
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ –∫–æ–º–∞–Ω–¥—ã
                    # –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –≤ –±—É–¥—É—â–µ–º –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    casino_command.__globals__['random'].random = lambda: random.random()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –±—ã–ª–∞ –ø–æ–¥–º–µ–Ω–∞
                    await ctx.send(f"@{ctx.author.name}, —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ –≤ –∫–∞–∑–∏–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {chance}%.")
                    logger.info(f"Casino win chance set to {chance}% by {ctx.author.name}")
                    
                except ValueError:
                    await ctx.send(f"@{ctx.author.name}, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 1 –¥–æ 100.")
                    
            except Exception as e:
                logger.error(f"Error in casino chance command: {str(e)}")
                await ctx.send(f"@{ctx.author.name}, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —à–∞–Ω—Å–∞ –≤—ã–∏–≥—Ä—ã—à–∞.") 